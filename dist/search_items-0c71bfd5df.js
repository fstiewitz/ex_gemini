searchNodes=[{"doc":"Gemini is a lightweight application protocol. This server implements a lightweight server implementation using Elixir. Architecture Gemini uses :ranch as a TLS socket pool. The data flow is as follows: :ranch creates a Gemini.ClientConnection for a connection. Gemini.ClientConnection reads the request. If request includes a client certificate, Gemini.ClientConnection registers a session with Gemini.UserCache . Gemini.ClientConnection builds the a Gemini.Request and forwards it to Gemini.Router . The top-level Gemini.Router uses the site map :sites (in config) to find a module to forward the request to (a &quot;Site-Module&quot;). That site module takes the Gemini.Request and returns a Gemini.Response . Gemini.ClientConnection sends the Gemini.Response and closes the connection. Configuration Site-Map A site map is a data structure with the following shape: %{ &quot;hostname&quot; =&gt; %{ &quot;path-or-path-prefix&quot; =&gt; { name , [ args ] } } } The value with the most specific path-or-path-prefix wins. name is either: a site module name which will be registered under the same name. a tuple of {mod, name} : A site module mod registered under the name name . The module is started with args under the supervision of Gemini.Supervisor . The top-level site-map is the config key :sites . If you do not need a site-map or you want to run your own routing, set config key :router to a module which implements Gemini.Router . Certificates :ranch is configured using the config key :ranch_config . Use it to configure at least :port , :certfile and :keyfile . :verify and :verify_fun is overwritten by the program. The certificate provided by the user is stored in the :peer property of Gemini.Request as {id, meta, cert} . cert is the DER-encoded certificate, id is a hash-value of that certificate (can be assumed to be unique and should probably be used internally if you implement some kind of permanent DB) and meta is a metadata map (see Metadata below). Rate-Limiting Rate-limiting is turned on by default with max. 20 calls/minute and a 60 second penalty. To configure the default rate-limit module, see Gemini.DefaultRateLimit . To turn it off, set config key :rate_limit to false. To provide your own Rate-Limit module, set :rate_limit to the name of the module which implements Gemini.RateLimit . Site-Modules Gemini.Site.File Serves a single file. %{ &quot;/&quot; =&gt; { { Gemini.Site.File , MyIndex } , [ &quot;public/index&quot; , &quot;text/gemini&quot; , :infinity ] } } Gemini.Site.Authenticated Require user certificate. %{ &quot;/auth&quot; =&gt; { { Gemini.Site.Authenticated , MyAuth } , [ sites : %{ &quot;/&quot; =&gt; { { Gemini.Site.File , MyAuthedFile } , [ &quot;public/authed&quot; , &quot;text/gemini&quot; , :infinity ] } } ] } } Gemini.Site.Input Require user input. %{ &quot;/input&quot; =&gt; { { Gemini.Site.Input , MyInput } , [ as_meta : false , sites : %{ &quot;/&quot; =&gt; { { Gemini.Site.Spy , MySpy } , [ ] } } ] } } Gemini.Site.Spy Return all data the server has stored about a given request/user/certificate. %{ &quot;/&quot; =&gt; { { Gemini.Site.Spy , MySpy } , [ ] } } Gemini.Site.ExInfo Return information about the running elixir/erlang system. %{ &quot;/&quot; =&gt; { { Gemini.Site.ExInfo , MyInfo } , [ ] } } This set of modules only provides the most basic functionality. Anything complex regarding user interaction and data storage has to be implemented using custom site modules. Custom Modules defmodule MyModule do use Gemini.Site , check_path : true def start_link ( [ name , path , args ] ) do GenServer . start_link ( __MODULE__ , [ path , args ] , name : name ) end def init ( [ path , args ] ) do { :ok , { path , args } } end def path ( { path , _args } ) , do : path def forward_request ( request , state ) do response = make_response ( :success , &quot;text/plain&quot; , &quot;Hello, World!&quot; , [ ] ) { :reply , { :ok , response } , state } end end The request in Gemini.Site.forward_request/2 is a Gemini.Request . If you need a user certificate, use your module in a Gemini.Site.Authenticated site-map or reimplement that behaviour from scratch. If you need user input, use your module in a Gemini.Site.Input site-map or reimplement that behaviour from scratch. Metadata Sites can associate temporary metadata with a user certificate using Gemini.UserCache . If a request includes a user certificate, the metadata map is available in Gemini.Request under :peer . See Gemini.Request for details.","ref":"Gemini.html","title":"Gemini","type":"module"},{"doc":"Return hash value of certificate that is used internally to identify users.","ref":"Gemini.html#cert_hash/1","title":"Gemini.cert_hash/1","type":"function"},{"doc":"Get best site (or {:error, :notfound} ) for a path and sitemap.","ref":"Gemini.html#get_best_site/2","title":"Gemini.get_best_site/2","type":"function"},{"doc":"Log request &amp; response to Logger.","ref":"Gemini.html#log_response/2","title":"Gemini.log_response/2","type":"function"},{"doc":"Return readable hash value.","ref":"Gemini.html#readable_hash/1","title":"Gemini.readable_hash/1","type":"function"},{"doc":"Remove trailing slash from path","ref":"Gemini.html#remove_trailing_slash/1","title":"Gemini.remove_trailing_slash/1","type":"function"},{"doc":"This protocol serializes data structures to the gemini protocol.","ref":"Gemini.Binary.html","title":"Gemini.Binary","type":"protocol"},{"doc":"Serialize input to binary, ready to be sent over Gemini.","ref":"Gemini.Binary.html#binary/1","title":"Gemini.Binary.binary/1","type":"function"},{"doc":"","ref":"Gemini.Binary.html#t:t/0","title":"Gemini.Binary.t/0","type":"type"},{"doc":"Represents a single connection. Spawned by :ranch .","ref":"Gemini.ClientConnection.html","title":"Gemini.ClientConnection","type":"module"},{"doc":"","ref":"Gemini.ClientConnection.html#init/3","title":"Gemini.ClientConnection.init/3","type":"function"},{"doc":"","ref":"Gemini.ClientConnection.html#loop/5","title":"Gemini.ClientConnection.loop/5","type":"function"},{"doc":"","ref":"Gemini.ClientConnection.html#t:limited/0","title":"Gemini.ClientConnection.limited/0","type":"type"},{"doc":"","ref":"Gemini.ClientConnection.html#t:rate_limit_status/0","title":"Gemini.ClientConnection.rate_limit_status/0","type":"type"},{"doc":"","ref":"Gemini.ClientConnection.html#t:unlimited/0","title":"Gemini.ClientConnection.unlimited/0","type":"type"},{"doc":"This module keeps track of IP addresses for rate-limiting. To configure rate-limiting, use the following config keys: periodic cleanup after :rate_limit_max_age minutes. allow :rate_limit_max_calls within :rate_limit_bracket_duration minutes or get rate-limited. :rate_limit_penalty seconds of rate-limiting.","ref":"Gemini.DefaultRateLimit.html","title":"Gemini.DefaultRateLimit","type":"module"},{"doc":"Returns a specification to start this module under a supervisor. See Supervisor .","ref":"Gemini.DefaultRateLimit.html#child_spec/1","title":"Gemini.DefaultRateLimit.child_spec/1","type":"function"},{"doc":"","ref":"Gemini.DefaultRateLimit.html#start_link/1","title":"Gemini.DefaultRateLimit.start_link/1","type":"function"},{"doc":"This module receives requests from Gemini.ClientConnection and forwards it to the appropriate server instance. This is the default router. Change config key :router to handle all requests by a different module.","ref":"Gemini.DefaultRouter.html","title":"Gemini.DefaultRouter","type":"module"},{"doc":"Behaviour module for complex meta types. Modules of this type can be used in place of string MIME types in Gemini.Response .","ref":"Gemini.Meta.html","title":"Gemini.Meta","type":"behaviour"},{"doc":"Encode first argument according to the meta type.","ref":"Gemini.Meta.html#c:encode/2","title":"Gemini.Meta.encode/2","type":"callback"},{"doc":"Return mime type of this meta type.","ref":"Gemini.Meta.html#c:type/1","title":"Gemini.Meta.type/1","type":"callback"},{"doc":"This module encodes text/plain texts. You can provide text/plain directly as a meta type in Gemini.Response , so this module is not really necessary.","ref":"Gemini.Meta.Text.html","title":"Gemini.Meta.Text","type":"module"},{"doc":"This behaviour keeps track of IP addresses for rate-limiting.","ref":"Gemini.RateLimit.html","title":"Gemini.RateLimit","type":"behaviour"},{"doc":"Check if IP-address is rate-limited. Returns :not_limited or {:limited, minutes}.","ref":"Gemini.RateLimit.html#c:is_rate_limited/1","title":"Gemini.RateLimit.is_rate_limited/1","type":"callback"},{"doc":"A request as defined in the Gemini Protocol Specification. Stores the url of the request, an optional user certificate as {id, meta, cert} and optional user input.","ref":"Gemini.Request.html","title":"Gemini.Request","type":"module"},{"doc":"","ref":"Gemini.Request.html#t:t/0","title":"Gemini.Request.t/0","type":"type"},{"doc":"A response as defined in the Gemini Protocol Specification. status is a two-digit tuple, meta is either a string (which will be copied into the response) or a tuple of Gemini.Meta module and arguments of that module. body is nil (no body), a binary ( meta is a string), or any data that will be passed to the Gemini.Meta module. authenticated is set to false (no auth required), true (authenticated) or :required (user auth required).","ref":"Gemini.Response.html","title":"Gemini.Response","type":"module"},{"doc":"","ref":"Gemini.Response.html#t:t/0","title":"Gemini.Response.t/0","type":"type"},{"doc":"Behaviour for router modules.","ref":"Gemini.Router.html","title":"Gemini.Router","type":"behaviour"},{"doc":"Process Gemini.Request . Return Gemini.Response .","ref":"Gemini.Router.html#c:forward_request/1","title":"Gemini.Router.forward_request/1","type":"callback"},{"doc":"","ref":"Gemini.Router.html#t:forward_return/0","title":"Gemini.Router.forward_return/0","type":"type"},{"doc":"Base module for sites. Use it with use Gemini.Site . If the use call is made with the option :check_path then forward_request/2 will only be called if the URL path matches exactly. It is a good idea to enable that for &quot;leaf&quot; sites, i.e. sites that do not forward to other sites. start_link receives a list with three arguments: the name to register the GenServer the path arguments from the site-map The server state must contain the path and path(state) must return that path.","ref":"Gemini.Site.html","title":"Gemini.Site","type":"behaviour"},{"doc":"Handle/Forward request. Think of it as GenServer.handle_call/3 without the middle from argument.","ref":"Gemini.Site.html#c:forward_request/2","title":"Gemini.Site.forward_request/2","type":"callback"},{"doc":"","ref":"Gemini.Site.html#make_response/4","title":"Gemini.Site.make_response/4","type":"function"},{"doc":"Return path supplied in start_link/1 using the state.","ref":"Gemini.Site.html#c:path/1","title":"Gemini.Site.path/1","type":"callback"},{"doc":"Start site's GenServer. the name to register the GenServer the path arguments from the site-map","ref":"Gemini.Site.html#c:start_link/1","title":"Gemini.Site.start_link/1","type":"callback"},{"doc":"Return two digit status tuple.","ref":"Gemini.Site.html#status/1","title":"Gemini.Site.status/1","type":"function"},{"doc":"","ref":"Gemini.Site.html#t:status_decl/0","title":"Gemini.Site.status_decl/0","type":"type"},{"doc":"This module blocks requests without a user certificate. Unauthenticated requests receive a 60 status code ( CLIENT CERTIFICATE REQUIRED ). Authenticated requests are passed through.","ref":"Gemini.Site.Authenticated.html","title":"Gemini.Site.Authenticated","type":"module"},{"doc":"Returns a specification to start this module under a supervisor. See Supervisor .","ref":"Gemini.Site.Authenticated.html#child_spec/1","title":"Gemini.Site.Authenticated.child_spec/1","type":"function"},{"doc":"","ref":"Gemini.Site.Authenticated.html#make_response/4","title":"Gemini.Site.Authenticated.make_response/4","type":"function"},{"doc":"Start site. name name of the server. path Path prefix. args is a keyword list with the following options: sites a site-map (see Gemini ) relative to path .","ref":"Gemini.Site.Authenticated.html#start_link/1","title":"Gemini.Site.Authenticated.start_link/1","type":"function"},{"doc":"This module prints information about the running elixir/erlang system as a text/gemini response. You probably only want this during development/testing.","ref":"Gemini.Site.ExInfo.html","title":"Gemini.Site.ExInfo","type":"module"},{"doc":"Returns a specification to start this module under a supervisor. See Supervisor .","ref":"Gemini.Site.ExInfo.html#child_spec/1","title":"Gemini.Site.ExInfo.child_spec/1","type":"function"},{"doc":"","ref":"Gemini.Site.ExInfo.html#make_response/4","title":"Gemini.Site.ExInfo.make_response/4","type":"function"},{"doc":"This module returns file contents as a gemini response.","ref":"Gemini.Site.File.html","title":"Gemini.Site.File","type":"module"},{"doc":"Returns a specification to start this module under a supervisor. See Supervisor .","ref":"Gemini.Site.File.html#child_spec/1","title":"Gemini.Site.File.child_spec/1","type":"function"},{"doc":"","ref":"Gemini.Site.File.html#make_response/4","title":"Gemini.Site.File.make_response/4","type":"function"},{"doc":"Start site. name name of the server. path Path prefix. args is a list with two arguments: a file path meta type of the file contents a cache value A cache value of :disabled disables the cache and the file will be loaded from disk on every access. A value of :infinity permanently caches the value in memory. A positive number of minutes clears the value from the cache if nobody accessed it in a fixed amount of minutes.","ref":"Gemini.Site.File.html#start_link/1","title":"Gemini.Site.File.start_link/1","type":"function"},{"doc":"","ref":"Gemini.Site.File.html#t:cache_spec/0","title":"Gemini.Site.File.cache_spec/0","type":"type"},{"doc":"This module asks the user for input.","ref":"Gemini.Site.Input.html","title":"Gemini.Site.Input","type":"module"},{"doc":"Returns a specification to start this module under a supervisor. See Supervisor .","ref":"Gemini.Site.Input.html#child_spec/1","title":"Gemini.Site.Input.child_spec/1","type":"function"},{"doc":"","ref":"Gemini.Site.Input.html#make_response/4","title":"Gemini.Site.Input.make_response/4","type":"function"},{"doc":"Start site. name name of the server. path Path prefix. args is a keyword list with the following arguments: sites a site-map (see Gemini ) relative to path as_meta is input stored in request only or saved in user certificate metadata prompt input prompt cert_prompt user certificate prompt (only used if as_meta is true ) key key to store input in metadata If as_meta is true, the input is stored in the metadata map under key key . The metadata map is tied to your user certificate for the duration of the session . Because sessions don't exist in this protocol, a &quot;session&quot; is kept alive with every request and the metadata is cleared 5 minutes after the last request.","ref":"Gemini.Site.Input.html#start_link/1","title":"Gemini.Site.Input.start_link/1","type":"function"},{"doc":"This module returns all information that the server stores about your request and associated user certificate.","ref":"Gemini.Site.Spy.html","title":"Gemini.Site.Spy","type":"module"},{"doc":"Returns a specification to start this module under a supervisor. See Supervisor .","ref":"Gemini.Site.Spy.html#child_spec/1","title":"Gemini.Site.Spy.child_spec/1","type":"function"},{"doc":"","ref":"Gemini.Site.Spy.html#make_response/1","title":"Gemini.Site.Spy.make_response/1","type":"function"},{"doc":"","ref":"Gemini.Site.Spy.html#make_response/4","title":"Gemini.Site.Spy.make_response/4","type":"function"},{"doc":"Module for configuring :ranch in a Supervisor .","ref":"Gemini.Socket.html","title":"Gemini.Socket","type":"module"},{"doc":"","ref":"Gemini.Socket.html#child_spec/1","title":"Gemini.Socket.child_spec/1","type":"function"},{"doc":"This module stores active sessions.","ref":"Gemini.UserCache.html","title":"Gemini.UserCache","type":"module"},{"doc":"Returns a specification to start this module under a supervisor. See Supervisor .","ref":"Gemini.UserCache.html#child_spec/1","title":"Gemini.UserCache.child_spec/1","type":"function"},{"doc":"Put metadata into session cache.","ref":"Gemini.UserCache.html#put_metadata/3","title":"Gemini.UserCache.put_metadata/3","type":"function"},{"doc":"Register cert (more precisely its hash) with session cache.","ref":"Gemini.UserCache.html#register/1","title":"Gemini.UserCache.register/1","type":"function"},{"doc":"","ref":"Gemini.UserCache.html#start_link/1","title":"Gemini.UserCache.start_link/1","type":"function"},{"doc":"Remove cert from cache.","ref":"Gemini.UserCache.html#unregister/1","title":"Gemini.UserCache.unregister/1","type":"function"}]